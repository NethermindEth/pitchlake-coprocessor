#[cfg(test)]
mod tests {
    use crate::fixed_point::{
        mrjpdf as mrjpdf_fixed, neg_log_likelihood as neg_log_likelihood_fixed, FixedPoint,
    };
    use crate::floating_point::{
        mrjpdf as mrjpdf_floating, neg_log_likelihood as neg_log_likelihood_floating,
    };
    use nalgebra::DVector;

    fn generate_inputs() -> (Vec<f64>, Vec<f64>, Vec<f64>) {
        let param = vec![
            -0.006246375006242974,
            0.02831079656483227,
            0.021424040730373572,
            0.003987449179574602,
            -0.0034206238557017155,
            0.21146713832539435,
        ];

        let pt_data = vec![
            0.001062712946239941,
            -0.11018575276745679,
            0.0015428760523192864,
            0.10818392714770653,
            0.03140804563764377,
            0.03370014434236168,
            -0.0838842283245782,
            0.029790006418625836,
            -0.020164067509451655,
            -0.05940298662369159,
            -0.17536409226786276,
            -0.05769855119273615,
            0.05806143009870368,
            0.08717677840431648,
            0.05346993014810408,
            0.00910674802409872,
            0.05449550886256915,
            0.01635519740835889,
            0.02872704698406281,
            0.009563246885743837,
            0.038423058682873545,
            0.011579215762804296,
            -0.0223687639227812,
            -0.006721483143618201,
            -0.04599813204755776,
            0.04908457704320668,
            0.016392471703483125,
            -0.0006720780678080018,
            -0.0018241591584491346,
            -0.044005138444727976,
            0.006980418583932391,
            0.014148936684488689,
            -0.009409376510063794,
            -0.039350410517691614,
            -0.050725298648174544,
            -0.08327320077031075,
            0.03522916548048727,
            0.05217221201541733,
            -0.0021124903275691054,
            -0.028859171057774802,
            -0.05751890256808778,
            0.0389660507730305,
            0.0033663652771416253,
            -0.02668207678118506,
            0.02565356368818783,
            0.04541507428656644,
            0.017084291704176024,
            0.012049834837906559,
            -0.016295846781261503,
            0.014990597181974152,
            -0.006259606663345352,
            -0.025120872615058687,
            0.016937434189536305,
            -0.023935392268203515,
            -0.09223362353407794,
            0.026265512693331772,
            0.010553317288753306,
            -0.013344353461842928,
            0.027487327559562402,
            -0.008515271277452996,
            0.0010119094123126615,
            0.07829464298121991,
            0.08524169311223773,
            0.03674437747153547,
            -0.006268129871543238,
            -0.016717485360711493,
            -0.014728203921976046,
            0.03237833252362776,
            -0.02057649715434451,
            -0.05637134919613018,
            0.05086314943301318,
            0.025656023827380636,
            -0.017000350903128236,
            -0.026555760478021995,
            0.00879920085813879,
            -0.11266623356531014,
            0.005982758998925419,
            -0.03704569114005807,
            0.08050444201218454,
            0.029928856521124203,
            0.0005911494064427814,
            -0.028891462400576273,
            0.0035358770669091655,
            -0.00931800771734359,
            0.008881146216495495,
            -0.01433541837411667,
            -0.037960074824589185,
            -0.05720971752792181,
            0.05948272779624375,
            0.060171287041814736,
            -0.003784926926009291,
            0.014933603068879364,
            5.3202599421098284e-5,
            0.03430841072389512,
            -0.025800045117001957,
            -0.05207302577075268,
            -0.09963840358181741,
            0.01587949504120445,
            -0.03498944095389689,
            -0.07339544404675635,
            0.042490914658198875,
            0.08707300225368897,
            0.11206053572733055,
            0.045532222191404514,
            -0.06467422314788962,
            -0.11267325665325245,
            -0.21381126392964234,
            -0.09723187780269171,
            0.020338524434631466,
            0.12771712690625492,
            0.10302377475993296,
            0.054224447931758846,
            0.0069704115581679105,
            -0.0006625563480469054,
            0.040547767004962765,
            0.040661504065926835,
            0.04969198981485334,
            0.09058651829065667,
            0.07022699864994308,
            0.06817428896085076,
            0.037517796117359836,
            -0.060552171888016204,
            0.056109798605696426,
            0.020161595277265576,
            0.01957808162361374,
            -0.025241217925902504,
            -0.03316322800777982,
            -0.14448460306449462,
            -0.02603298642821983,
            -0.14696816994968032,
            -0.2394927636855435,
            -0.11997694843595141,
            -0.001347022918739782,
            0.022926883869150316,
            -0.021254876683141077,
            0.04482668787512978,
            -0.006320642516968178,
            0.0918762397091264,
            0.05915277061136237,
            0.040751498343869486,
            0.0539582446975686,
            0.03386225980152702,
            0.026077289986748298,
            0.08426844340923978,
            0.04260889643319388,
            0.02582312708764789,
            -0.017612925414081104,
            -0.0029289458302912408,
            -0.016121148542055153,
            -0.03289186592933646,
            -0.028375590948115814,
            -0.0021996993727668723,
            0.012362382663141602,
            -0.02750399523682745,
            -0.028884143489740666,
            -0.1408576236336998,
            -0.024223862110432037,
            0.049686931416470514,
            0.042722633478863514,
            0.011941431285826809,
            0.0031921370698846374,
            0.03173840422951102,
            -0.0005777974996803437,
            -0.0640309155305161,
            0.05652593401608641,
            0.003129724678494483,
            0.0002000479649879594,
            -0.017731740736298462,
        ];
        let pt1_data = vec![
            0.044063231372664546,
            0.001062712946239941,
            -0.11018575276745679,
            0.0015428760523192864,
            0.10818392714770653,
            0.03140804563764377,
            0.03370014434236168,
            -0.0838842283245782,
            0.029790006418625836,
            -0.020164067509451655,
            -0.05940298662369159,
            -0.17536409226786276,
            -0.05769855119273615,
            0.05806143009870368,
            0.08717677840431648,
            0.05346993014810408,
            0.00910674802409872,
            0.05449550886256915,
            0.01635519740835889,
            0.02872704698406281,
            0.009563246885743837,
            0.038423058682873545,
            0.011579215762804296,
            -0.0223687639227812,
            -0.006721483143618201,
            -0.04599813204755776,
            0.04908457704320668,
            0.016392471703483125,
            -0.0006720780678080018,
            -0.0018241591584491346,
            -0.044005138444727976,
            0.006980418583932391,
            0.014148936684488689,
            -0.009409376510063794,
            -0.039350410517691614,
            -0.050725298648174544,
            -0.08327320077031075,
            0.03522916548048727,
            0.05217221201541733,
            -0.0021124903275691054,
            -0.028859171057774802,
            -0.05751890256808778,
            0.0389660507730305,
            0.0033663652771416253,
            -0.02668207678118506,
            0.02565356368818783,
            0.04541507428656644,
            0.017084291704176024,
            0.012049834837906559,
            -0.016295846781261503,
            0.014990597181974152,
            -0.006259606663345352,
            -0.025120872615058687,
            0.016937434189536305,
            -0.023935392268203515,
            -0.09223362353407794,
            0.026265512693331772,
            0.010553317288753306,
            -0.013344353461842928,
            0.027487327559562402,
            -0.008515271277452996,
            0.0010119094123126615,
            0.07829464298121991,
            0.08524169311223773,
            0.03674437747153547,
            -0.006268129871543238,
            -0.016717485360711493,
            -0.014728203921976046,
            0.03237833252362776,
            -0.02057649715434451,
            -0.05637134919613018,
            0.05086314943301318,
            0.025656023827380636,
            -0.017000350903128236,
            -0.026555760478021995,
            0.00879920085813879,
            -0.11266623356531014,
            0.005982758998925419,
            -0.03704569114005807,
            0.08050444201218454,
            0.029928856521124203,
            0.0005911494064427814,
            -0.028891462400576273,
            0.0035358770669091655,
            -0.00931800771734359,
            0.008881146216495495,
            -0.01433541837411667,
            -0.037960074824589185,
            -0.05720971752792181,
            0.05948272779624375,
            0.060171287041814736,
            -0.003784926926009291,
            0.014933603068879364,
            5.3202599421098284e-5,
            0.03430841072389512,
            -0.025800045117001957,
            -0.05207302577075268,
            -0.09963840358181741,
            0.01587949504120445,
            -0.03498944095389689,
            -0.07339544404675635,
            0.042490914658198875,
            0.08707300225368897,
            0.11206053572733055,
            0.045532222191404514,
            -0.06467422314788962,
            -0.11267325665325245,
            -0.21381126392964234,
            -0.09723187780269171,
            0.020338524434631466,
            0.12771712690625492,
            0.10302377475993296,
            0.054224447931758846,
            0.0069704115581679105,
            -0.0006625563480469054,
            0.040547767004962765,
            0.040661504065926835,
            0.04969198981485334,
            0.09058651829065667,
            0.07022699864994308,
            0.06817428896085076,
            0.037517796117359836,
            -0.060552171888016204,
            0.056109798605696426,
            0.020161595277265576,
            0.01957808162361374,
            -0.025241217925902504,
            -0.03316322800777982,
            -0.14448460306449462,
            -0.02603298642821983,
            -0.14696816994968032,
            -0.2394927636855435,
            -0.11997694843595141,
            -0.001347022918739782,
            0.022926883869150316,
            -0.021254876683141077,
            0.04482668787512978,
            -0.006320642516968178,
            0.0918762397091264,
            0.05915277061136237,
            0.040751498343869486,
            0.0539582446975686,
            0.03386225980152702,
            0.026077289986748298,
            0.08426844340923978,
            0.04260889643319388,
            0.02582312708764789,
            -0.017612925414081104,
            -0.0029289458302912408,
            -0.016121148542055153,
            -0.03289186592933646,
            -0.028375590948115814,
            -0.0021996993727668723,
            0.012362382663141602,
            -0.02750399523682745,
            -0.028884143489740666,
            -0.1408576236336998,
            -0.024223862110432037,
            0.049686931416470514,
            0.042722633478863514,
            0.011941431285826809,
            0.0031921370698846374,
            0.03173840422951102,
            -0.0005777974996803437,
            -0.0640309155305161,
            0.05652593401608641,
            0.003129724678494483,
            0.0002000479649879594,
        ];

        (param, pt_data, pt1_data)
    }

    #[test]
    fn test_test() {
        let xxx = 1;
        let yyy = 1;
        let zzz = xxx + yyy;
        assert_eq!(zzz, 2);
    }

    #[test]
    fn test_mrjpdf_floating() {
        let (param, pt_data, pt1_data) = generate_inputs();

        let pt = DVector::from_vec(pt_data);
        let pt1 = DVector::from_vec(pt1_data);

        let result = mrjpdf_floating(&param, &pt, &pt1);
        println!("{:?}", result);
    }

    #[test]
    fn test_neg_log_likelihood_floating() {
        let (params, pt_data, pt1_data) = generate_inputs();

        let pt = DVector::from_vec(pt_data);

        let pt1 = DVector::from_vec(pt1_data);

        let result = neg_log_likelihood_floating(&params, &pt, &pt1);
        println!("result: {}", result);
    }

    #[test]
    fn test_mrjpdf_fixed() {
        let (params, pt_data, pt1_data) = generate_inputs();
        let params = params
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt_data = pt_data
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt1_data = pt1_data
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt = DVector::from_vec(pt_data);
        let pt1 = DVector::from_vec(pt1_data);

        let result = mrjpdf_fixed(&params, &pt, &pt1);
        println!("{:?}", result);
    }

    #[test]
    fn test_neg_log_likelihood_fixed() {
        let (params, pt_data, pt1_data) = generate_inputs();
        let params = params
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt_data = pt_data
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt1_data = pt1_data
            .iter()
            .map(|x| FixedPoint::from_num(*x))
            .collect::<Vec<_>>();

        let pt = DVector::from_vec(pt_data);
        let pt1 = DVector::from_vec(pt1_data);

        let result = neg_log_likelihood_fixed(&params, &pt, &pt1);
        println!("result: {}", result);
    }
}
